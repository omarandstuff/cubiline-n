using UnityEngine;
using System.Collections;

public class MenuInteract : MonoBehaviour
{
	//////////////////////////////////////////////////////////////
	///////////////////////// COMPONENTS /////////////////////////
	//////////////////////////////////////////////////////////////
	public Transform cubeMenu;
	public Camera menuCamera;

	//////////////////////////////////////////////////////////////
	//////////////////////// PARAMETERS //////////////////////////
	//////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////
	////////////////////// CONTROL VARIABLES /////////////////////
	//////////////////////////////////////////////////////////////

	private Vector3 currentRotation = Vector3.zero;
	private Vector3 targetRotation = Vector3.zero;
	private Vector3 inRotation = Vector3.zero;
	private Vector3 rotationVelocity = Vector3.zero;

	private Vector3 targetScale = new Vector3(11, 11, 11);
	private Vector3 curretScale = new Vector3(11, 11, 11);
	private Vector3 scaleVelocity = Vector3.zero;

	////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////// MONO BEHAVIOR /////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////

	private void Start()
	{
		menuCamera.transform.position = new Vector3(-20, 0, -80);
	}

	public void FixedUpdate()
	{
		currentRotation = Vector3.SmoothDamp(currentRotation, targetRotation + inRotation, ref rotationVelocity, 0.15f);
		curretScale = Vector3.SmoothDamp(curretScale, targetScale, ref scaleVelocity, 0.15f);

		cubeMenu.localRotation = Quaternion.Euler(currentRotation);
		cubeMenu.localScale = curretScale;
	}

	public void OnMouseDown()
	{
		targetScale = new Vector3(8.0f, 8.0f, 8.0f);
	}

	public void OnMouseDrag()
	{
		inRotation.y -= Input.GetAxis("Horizontal Mouse") * 0.3f;
	}

	public void OnMouseUp()
	{
		targetRotation.y += (inRotation.y > 0 ? Mathf.Ceil(((int)inRotation.y / 45) / 2.0f) : Mathf.Floor(((int)inRotation.y / 45) / 2.0f)) * 90;
		targetScale = new Vector3(11.0f, 11.0f, 11.0f);
		inRotation.y = 0;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////// SETUP ////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////

	public void Reset(float arenaSize)
	{

	}
}
